using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace Clustering.Core
{
    public abstract class AbstractAlgorithm
    {

        #region Constructors

        /// <summary>
        /// Empty constructor.
        /// </summary>
        public AbstractAlgorithm()
            : this("N/A")
        {
        }

        /// <summary>
        /// Minimal constructor.
        /// </summary>
        protected AbstractAlgorithm(string name)
        {
            Name = name;
            Iterations = new List<Iteration>();
        }

        #endregion

        #region Fields/Properties

        /// <summary>
        /// The name of the algorithm.
        /// </summary>
        [SerializeField]
        private string Name;



        /// <summary>
        /// List of all iterations generated by this algorithm.
        /// </summary>
        [SerializeField]
        private List<Iteration> Iterations;

        #endregion

        #region Methods

        /// <summary>
        /// Computes the clusters.
        /// </summary>
        public abstract void Compute();

        /// <summary>
        /// Displays the name of this algorithm.
        /// </summary>
        public override string ToString()
        {
            return Name;
        }

        #endregion

    }
}
